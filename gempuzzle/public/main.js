/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _index_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.html */ \"./src/index.html\");\n/* harmony import */ var _styles_style_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./styles/style.scss */ \"./src/styles/style.scss\");\n/* harmony import */ var _scripts_render__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/render */ \"./src/scripts/render.js\");\n/* eslint-disable no-use-before-define */\n/* eslint-disable no-plusplus */\n/* eslint-disable no-param-reassign */\n\n\n\n(0,_scripts_render__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\nvar burger = document.querySelector('.burger__container');\nvar wrapper = document.querySelector('.game-field__wrapper');\nvar settings = document.querySelector('.settings');\nvar startBtn = document.querySelector('.start-btn');\nvar stopBtn = document.querySelector('.stop-btn');\nvar pauseBtn = document.querySelector('.pause-btn');\nvar gameField = document.querySelector('.game-field');\nvar gameLvls = document.querySelectorAll('.game-lvl');\nvar steps = document.querySelector('.steps-counter__num');\nvar hours = document.querySelector('.hours');\nvar minutes = document.querySelector('.minutes');\nvar seconds = document.querySelector('.seconds');\nvar popup = document.querySelector('.popup');\nvar popUpCloseBtn = document.querySelector('.popup__burger__block');\nvar finalScore = document.querySelector('.popup__score');\nvar finalTime = document.querySelector('.popup__time');\nvar bestScoreBlock = document.querySelector('.best-score__block');\nvar wish = document.querySelector('.bonus__block');\nvar moveSoundItem = document.querySelector('.move');\nvar startSoundItem = document.querySelector('.start');\nvar soundBtn = document.querySelector('.sound');\nvar soundBtnIcon = document.querySelector('.sound-icon');\nvar bestResultsBtn = document.querySelector('.best-results-btn');\nvar bestResultsPopUp = document.querySelector('.best-results__popup');\nvar bestResultsCloseBtn = document.querySelector('.best-popup__burger__block');\nvar saveBtn = document.querySelector('.save-btn');\nvar playSaveBtn = document.querySelector('.play-save-btn');\nvar nonEmptyCoords = null;\nvar emptyCoords = null;\nvar timerActive;\nvar ableToPlay = false;\nvar isPaused = true;\nvar isRunning = false;\nvar firstGame = false;\nvar stepsNum = 0;\nvar soundIsOn = true;\n// let cellsNumber = 0;\n// let gameCells = [];\nvar matrix = [];\nvar gameHours = '';\nvar gameMinutes = '';\nvar gameSeconds = '';\nvar bestScore = {\n  2: 1000,\n  3: 1000,\n  4: 1000,\n  5: 1000,\n  6: 1000,\n  7: 1000,\n  8: 1000,\n  wish: \"You're awesome =)\"\n};\nvar openMenu = function openMenu() {\n  if (!settings.classList.contains('opened')) {\n    settings.classList.add('opened');\n    burger.classList.add('active');\n    ableToPlay = false;\n  } else {\n    settings.classList.remove('opened');\n    burger.classList.remove('active');\n    ableToPlay = true;\n  }\n};\nvar closeMenu = function closeMenu() {\n  if (settings.classList.contains('opened')) {\n    settings.classList.remove('opened');\n    burger.classList.remove('active');\n    ableToPlay = true;\n  }\n};\nvar openPopUp = function openPopUp() {\n  popup.classList.add('opened');\n  finalScore.innerHTML = \"Your score is: \".concat(stepsNum);\n  finalTime.innerHTML = \"Your time is:\\n  \".concat(gameHours < 10 ? \"0\".concat(gameHours) : gameHours, \":\\n  \").concat(gameMinutes < 10 ? \"0\".concat(gameMinutes) : gameMinutes, \":\\n  \").concat(gameSeconds < 10 ? \"0\".concat(gameSeconds) : gameSeconds);\n};\nvar closePopUp = function closePopUp() {\n  popup.classList.remove('opened');\n};\nvar fillBestTable = function fillBestTable() {\n  var bests = {};\n  for (var i = 2; i <= 8; i++) {\n    var local = localStorage.getItem(\"\".concat(i));\n    if (local) {\n      bests[i] = local;\n    }\n  }\n  var bestSizes = Object.keys(bests);\n  for (var _i = 0; _i < bestSizes.length; _i++) {\n    var field = document.querySelector([\"div[data-size='\".concat(bestSizes[_i], \"'\")]);\n    field.innerHTML = \"\".concat(bests[bestSizes[_i]]);\n  }\n};\nvar openBestScoreTable = function openBestScoreTable() {\n  bestResultsPopUp.classList.add('opened');\n  closeMenu();\n};\nvar closeBestScoreTable = function closeBestScoreTable() {\n  bestResultsPopUp.classList.remove('opened');\n};\nvar shuffle = function shuffle(arr) {\n  var j;\n  var temp;\n  for (var i = arr.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    temp = arr[j];\n    arr[j] = arr[i];\n    arr[i] = temp;\n  }\n  return arr;\n};\nvar createArray = function createArray(numOfElements) {\n  var valuesArray = [];\n  for (var i = 1; i <= numOfElements; i++) {\n    valuesArray.push(i);\n  }\n  return valuesArray;\n};\nvar createMatrix = function createMatrix(array, number) {\n  var matr = [];\n  var x = 0;\n  var y = 0;\n  for (var i = 0; i < number; i++) {\n    matr.push([]);\n  }\n  for (var _i2 = 0; _i2 < array.length; _i2++) {\n    if (x >= number) {\n      y++;\n      x = 0;\n    }\n    matr[y][x] = array[_i2];\n    x++;\n  }\n  return matr;\n};\nfunction findCoords(number, matr) {\n  for (var y = 0; y < matr.length; y++) {\n    for (var x = 0; x < matr[y].length; x++) {\n      if (matr[y][x] === number) {\n        return {\n          x: x,\n          y: y\n        };\n      }\n    }\n  }\n  return null;\n}\nfunction checkMatrixIsSolvable(matr) {\n  var inversions = 0;\n  var arr = matr.flat();\n  var cellsNumber = arr.length;\n  var emptyRow = findCoords(cellsNumber, matr);\n  for (var i = 0; i < arr.length; i++) {\n    for (var j = arr.length; j > i; j--) {\n      if (arr[j] < arr[i] && arr[i] !== arr.length) {\n        inversions += 1;\n      }\n    }\n  }\n  return cellsNumber % 2 === 0 ? checkEvenMatrixIsSolvable(inversions, emptyRow.y) : checkOddMatrixIsSolvable(inversions);\n}\nfunction checkEvenMatrixIsSolvable(inversions, emptyRow) {\n  console.log(inversions, emptyRow);\n  return (inversions + emptyRow) % 2 !== 0;\n}\nfunction checkOddMatrixIsSolvable(inversions) {\n  console.log(inversions);\n  return inversions % 2 === 0;\n}\nvar createNewCells = function createNewCells(number, array) {\n  var fieldSize = Math.round(Math.sqrt(number));\n  if (localStorage.getItem(\"\".concat(fieldSize))) {\n    var result = localStorage.getItem(\"\".concat(fieldSize));\n    bestScoreBlock.innerHTML = \"Best score for \".concat(fieldSize, \" x \").concat(fieldSize, \" is \").concat(result);\n  }\n  gameField.innerHTML = '';\n  for (var i = 0; i < array.length; i += 1) {\n    var cell = document.createElement('div');\n    cell.classList.add('game-field__item');\n    cell.classList.add(\"game-field__item_\".concat(fieldSize));\n    cell.setAttribute('draggable', 'false');\n    cell.setAttribute('data-item', \"\".concat(array[i]));\n    cell.innerHTML = \"\".concat(array[i]);\n    gameField.append(cell);\n    if (cell.dataset.item === \"\".concat(number)) {\n      cell.innerHTML = '';\n      cell.classList.add('blank');\n    }\n  }\n};\nvar setPositionItems = function setPositionItems(matr) {\n  var cells = document.querySelectorAll('.game-field__item');\n  for (var y = 0; y < matr.length; y++) {\n    for (var x = 0; x < matr[y].length; x++) {\n      var value = matr[y][x];\n      var node = cells[value - 1];\n      var percents = 100;\n      node.style.transform = \"translate3D(\".concat(x * percents, \"%, \").concat(y * percents, \"%, 0)\");\n    }\n  }\n};\nvar setStepsNumber = function setStepsNumber(stepsQuantity) {\n  return \"\".concat(stepsQuantity);\n};\nvar startTimeCounter = function startTimeCounter(hour, min, sec) {\n  timerActive = setInterval(function () {\n    sec += 1;\n    if (sec < 10) {\n      seconds.innerHTML = \"0\".concat(sec);\n    }\n    if (sec >= 10) {\n      seconds.innerHTML = \"\".concat(sec);\n    }\n    if (sec > 59) {\n      sec = 0;\n      min += 1;\n      seconds.innerHTML = \"0\".concat(sec);\n    }\n    if (min < 10) {\n      minutes.innerHTML = \"0\".concat(min);\n    }\n    if (min > 10) {\n      minutes.innerHTML = \"\".concat(min);\n    }\n    if (min > 59) {\n      hour += 1;\n      min = 0;\n      hours.innerHTML = \"0\".concat(hour);\n    }\n    if (hour > 9) {\n      hours.innerHTML = \"\".concat(hour);\n    }\n    if (hour > 23) {\n      hour = 0;\n    }\n  }, 1000);\n};\nvar saveTimeCounter = function saveTimeCounter() {\n  gameHours = +hours.innerHTML;\n  gameMinutes = +minutes.innerHTML;\n  gameSeconds = +seconds.innerHTML;\n};\nvar stopTimeCounter = function stopTimeCounter() {\n  hours.innerHTML = '00';\n  minutes.innerHTML = '00';\n  seconds.innerHTML = '00';\n  steps.innerHTML = '0';\n  gameHours = 0;\n  gameMinutes = 0;\n  gameSeconds = 0;\n  stepsNum = 0;\n};\nvar removeColor = function removeColor() {\n  gameLvls.forEach(function (btn) {\n    if (btn.classList.contains('chosen')) btn.classList.remove('chosen');\n  });\n};\nvar handleSounds = function handleSounds() {\n  if (soundBtnIcon.classList.contains('muted')) {\n    soundIsOn = true;\n    soundBtnIcon.classList.remove('muted');\n  } else {\n    soundBtnIcon.classList.add('muted');\n    soundIsOn = false;\n  }\n};\nvar playAudio = function playAudio(audio) {\n  if (soundIsOn) {\n    audio.play();\n  }\n};\nvar isValidForSwap = function isValidForSwap(coords1, coords2) {\n  var diffX = Math.abs(coords1.x - coords2.x);\n  var diffY = Math.abs(coords1.y - coords2.y);\n  return (diffX === 1 || diffY === 1) && (coords1.x === coords2.x || coords1.y === coords2.y);\n};\nvar showResult = function showResult(matr, array) {\n  var flattened = matr.flat();\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] !== flattened[i]) {\n      return false;\n    }\n  }\n  return true;\n};\nvar setBestScore = function setBestScore() {\n  wish.innerHTML = bestScore.wish;\n  var localBest = localStorage.getItem(\"\".concat(matrix.length));\n  if (localBest) {\n    if (stepsNum < localBest && stepsNum > 0) {\n      localStorage.setItem(\"\".concat(matrix.length), stepsNum);\n    }\n  } else {\n    localStorage.setItem(\"\".concat(matrix.length), stepsNum);\n  }\n};\nfunction swap(coords1, coords2, matr) {\n  var cellsNumber = getCellsNumber();\n  var rightArray = createArray(cellsNumber);\n  if (!isPaused) {\n    var coords1Num = matr[coords1.y][coords1.x];\n    matr[coords1.y][coords1.x] = matr[coords2.y][coords2.x];\n    matr[coords2.y][coords2.x] = coords1Num;\n    playAudio(moveSoundItem);\n    if (showResult(matr, rightArray)) {\n      ableToPlay = false;\n      isRunning = false;\n      clearInterval(timerActive);\n      saveTimeCounter();\n      openPopUp();\n      setBestScore();\n    }\n  }\n}\nvar startGameByMove = function startGameByMove() {\n  if (stepsNum === 1) {\n    clearInterval(timerActive);\n    startTimeCounter(0, 0, 0);\n    startBtn.innerHTML = 'New game';\n  }\n};\nvar handleBtnsText = function handleBtnsText() {\n  if (isRunning) {\n    if (isPaused) {\n      pauseBtn.innerHTML = 'Continue';\n      pauseBtn.classList.add('clicked');\n    } else {\n      pauseBtn.innerHTML = 'Pause';\n      pauseBtn.classList.remove('clicked');\n    }\n  }\n};\nfunction getCellsNumber() {\n  var gameCells = document.querySelectorAll('.game-field__item');\n  var cellsNumber = gameCells.length;\n  return cellsNumber;\n}\nfunction startGame(cellsNumber) {\n  var sortedArray = createArray(cellsNumber);\n  createNewCells(cellsNumber, sortedArray);\n  var shuffledArr = shuffle(sortedArray);\n  var gameMatrix = createMatrix(shuffledArr, Math.sqrt(cellsNumber));\n  var solvable = checkMatrixIsSolvable(gameMatrix);\n  while (!solvable) {\n    solvable = checkMatrixIsSolvable(gameMatrix);\n    shuffledArr = shuffle(shuffledArr);\n    gameMatrix = createMatrix(shuffledArr, Math.sqrt(cellsNumber));\n  }\n  return gameMatrix;\n}\nvar playSavedGame = function playSavedGame() {\n  isPaused = false;\n  ableToPlay = true;\n  isRunning = true;\n  var cellsNumber = getCellsNumber();\n  var savedGame = localStorage.getItem(\"\".concat(cellsNumber));\n  var savedObj = JSON.parse(savedGame);\n  matrix = savedObj.matrix;\n  stepsNum = savedObj.stepsNum;\n  gameHours = savedObj.gameHours;\n  gameMinutes = savedObj.gameMinutes;\n  gameSeconds = savedObj.gameSeconds;\n  steps.innerHTML = setStepsNumber(stepsNum);\n  setPositionItems(matrix);\n  clearInterval(timerActive);\n  startTimeCounter(gameHours, gameMinutes, gameSeconds);\n  handleBtnsText();\n};\ngameLvls.forEach(function (btn) {\n  btn.addEventListener('click', function () {\n    firstGame = false;\n    isPaused = false;\n    ableToPlay = true;\n    handleBtnsText();\n    startBtn.innerHTML = 'Shuffle and start';\n    removeColor();\n    btn.classList.add('chosen');\n    closeMenu();\n    stepsNum = 0;\n    var rows = btn.innerHTML[0] * 1;\n    var cellsNumber = Math.pow(rows, 2);\n    matrix = startGame(cellsNumber);\n    setPositionItems(matrix);\n    startGameByMove();\n    if (localStorage.getItem(\"\".concat(rows))) {\n      var result = localStorage.getItem(\"\".concat(rows));\n      bestScoreBlock.innerHTML = \"Best score for \".concat(rows, \" x \").concat(rows, \" is \").concat(result);\n    } else {\n      bestScoreBlock.innerHTML = '';\n    }\n    clearInterval(timerActive);\n    stopTimeCounter();\n  });\n});\nstartBtn.addEventListener('click', function () {\n  ableToPlay = true;\n  isRunning = true;\n  isPaused = false; // check\n  firstGame = false;\n  stepsNum = 0;\n  steps.innerHTML = setStepsNumber(stepsNum);\n  startBtn.innerHTML = 'New game';\n  var cellsNumber = getCellsNumber();\n  matrix = startGame(cellsNumber);\n  setPositionItems(matrix);\n  clearInterval(timerActive);\n  stopTimeCounter();\n  startTimeCounter(0, 0, 0);\n  closePopUp();\n  playAudio(startSoundItem);\n  handleBtnsText();\n});\npauseBtn.addEventListener('click', function () {\n  if (isRunning) {\n    if (isPaused) {\n      isPaused = false;\n      handleBtnsText();\n      clearInterval(timerActive);\n      startTimeCounter(gameHours, gameMinutes, gameSeconds);\n    } else {\n      isPaused = true;\n      handleBtnsText();\n      saveTimeCounter();\n      clearInterval(timerActive);\n    }\n  }\n});\nstopBtn.addEventListener('click', function () {\n  isRunning = true;\n  isPaused = false;\n  stepsNum = 0;\n  handleBtnsText();\n  clearInterval(timerActive);\n  saveTimeCounter();\n  stopTimeCounter();\n  handleBtnsText();\n});\ngameField.addEventListener('mousedown', function (event) {\n  var cellsNumber = getCellsNumber();\n  var nonEmptyCell = event.target.closest('.game-field__item');\n  var empty = gameField.lastChild;\n  if (!nonEmptyCell || nonEmptyCell === empty) {\n    return;\n  }\n  var nonEmptyCellNum = Number(nonEmptyCell.dataset.item);\n  var emptyCellNum = cellsNumber;\n  nonEmptyCoords = findCoords(nonEmptyCellNum, matrix);\n  emptyCoords = findCoords(emptyCellNum, matrix);\n  var isValid = isValidForSwap(nonEmptyCoords, emptyCoords);\n  if (isValid && ableToPlay && !isPaused) {\n    nonEmptyCell.setAttribute('draggable', 'true');\n    empty.setAttribute('draggable', 'false');\n    nonEmptyCell.classList.add('moving');\n  } else {\n    nonEmptyCell.setAttribute('draggable', 'false');\n  }\n});\ngameField.addEventListener('mousemove', function (event) {\n  var cellsNumber = getCellsNumber();\n  var nonEmptyCell = event.target.closest('.game-field__item');\n  var empty = gameField.lastChild;\n  if (!nonEmptyCell || nonEmptyCell === empty) {\n    return;\n  }\n  var nonEmptyCellNum = Number(nonEmptyCell.dataset.item);\n  var emptyCellNum = cellsNumber;\n  nonEmptyCoords = findCoords(nonEmptyCellNum, matrix);\n  emptyCoords = findCoords(emptyCellNum, matrix);\n  var isValid = isValidForSwap(nonEmptyCoords, emptyCoords);\n  if (isValid && ableToPlay && !isPaused) {\n    nonEmptyCell.classList.add('valid');\n  } else {\n    nonEmptyCell.classList.add('invalid');\n  }\n});\ngameField.addEventListener('dragend', function (event) {\n  event.preventDefault();\n  if (ableToPlay) {\n    isRunning = true;\n    swap(nonEmptyCoords, emptyCoords, matrix);\n    stepsNum += 1;\n    steps.innerHTML = stepsNum;\n    startGameByMove();\n    setPositionItems(matrix);\n    event.target.classList.remove('moving');\n  }\n});\ngameField.addEventListener('mouseout', function (event) {\n  var nonEmptyCell = event.target.closest('.game-field__item');\n  nonEmptyCell.classList.remove('valid');\n  nonEmptyCell.classList.remove('invalid');\n});\ngameField.addEventListener('click', function (event) {\n  var cellsNumber = getCellsNumber();\n  var nonEmptyCell = event.target.closest('.game-field__item');\n  if (!nonEmptyCell) {\n    return;\n  }\n  var nonEmptyCellNum = Number(nonEmptyCell.dataset.item);\n  var emptyCellNum = cellsNumber;\n  nonEmptyCoords = findCoords(nonEmptyCellNum, matrix);\n  emptyCoords = findCoords(emptyCellNum, matrix);\n  var isValid = isValidForSwap(nonEmptyCoords, emptyCoords);\n  if (isValid && ableToPlay && !isPaused) {\n    isRunning = true;\n    stepsNum += 1;\n    steps.innerHTML = setStepsNumber(stepsNum);\n    startGameByMove();\n    swap(nonEmptyCoords, emptyCoords, matrix);\n    event.target.classList.remove('moving');\n    setPositionItems(matrix);\n  }\n});\nsaveBtn.addEventListener('click', function () {\n  var cellsNumber = getCellsNumber();\n  saveTimeCounter();\n  localStorage.setItem(\"\".concat(cellsNumber), JSON.stringify({\n    matrix: matrix,\n    stepsNum: stepsNum,\n    gameHours: gameHours,\n    gameMinutes: gameMinutes,\n    gameSeconds: gameSeconds\n  }));\n});\nplaySaveBtn.addEventListener('click', function () {\n  playSavedGame();\n});\nwindow.onload = function () {\n  ableToPlay = true;\n  isPaused = false;\n  firstGame = true;\n  clearInterval(timerActive);\n  var cellsNumber = 16;\n  matrix = startGame(cellsNumber);\n  setPositionItems(matrix);\n  startGameByMove();\n  fillBestTable();\n  if (localStorage.getItem(\"\".concat(cellsNumber))) {\n    playSaveBtn.style.display = 'block';\n  }\n};\nbestResultsBtn.addEventListener('click', openBestScoreTable);\npopUpCloseBtn.addEventListener('click', closePopUp);\nbestResultsCloseBtn.addEventListener('click', closeBestScoreTable);\nwrapper.addEventListener('click', closeMenu);\nburger.addEventListener('click', openMenu);\nsoundBtn.addEventListener('click', handleSounds);\n\n// function handleDrop() {\n//   const cells = document.querySelectorAll('.game-field__item');\n//   cells.forEach((cell) => {\n//     cell.addEventListener('dragstart', (event) => {\n//       if (event.target !== cell) {\n//         console.log('no');\n//       } else {\n//         console.log('dragstart', event.target);\n//       }\n//     });\n//     cell.addEventListener('dragend', (event) => {\n//       console.log('dragend', event.target);\n//       if (ableToPlay && event.target === cell) {\n//         swap(nonEmptyCoords, emptyCoords, matrix);\n//         stepsNum += 1;\n//         steps.innerHTML = stepsNum;\n//         if (stepsNum === 1) {\n//           startTimeCounter(0, 0, 0);\n//         }\n//         setPositionItems(matrix);\n//       }\n//       cell.setAttribute('draggable', 'false');\n//     });\n//   });\n// }\n\n// const draggedItem = null;\n// let droppedItem = null;\n\n// gameCells.forEach((item) => {\n//   item.addEventListener('dragstart', handleDragstart);\n//   item.addEventListener('dragend', handleDragend);\n//   item.addEventListener('drag', handleDrag);\n//   item.addEventListener('dragenter', () => {\n//     if (draggedItem !== droppedItem) { droppedItem = item; }\n//   });\n//   item.addEventListener('dragleave', () => {\n//     droppedItem = null;\n//   });\n// });\n\n/// //////////////////////////////////////////////////////\n\n/// ////////////////////////////////////////////////\n\n// class Game {\n//   constructor(number) {\n//     this.rows = number;\n//     this.cols = number;\n//     this.cells = this.cols * this.rows;\n//     this.array = [];\n//     this.shuffledArr = [];\n//     this.timerActive = 0;\n//     this.seconds = 0;\n//     this.minutes = 0;\n//     this.hours = 0;\n//   }\n\n//   createArray() {\n//     for (let i = 1; i <= this.cells; i++) {\n//       this.array.push(i);\n//     }\n//     return this.array;\n//   }\n\n//   shuffle() {\n//     for (let i = 1; i <= this.cells; i++) {\n//       this.shuffledArr.push(i);\n//     }\n//     let j; let temp;\n//     for (let i = this.shuffledArr.length - 1; i > 0; i--) {\n//       j = Math.floor(Math.random() * (i + 1));\n//       temp = this.shuffledArr[j];\n//       this.shuffledArr[j] = this.shuffledArr[i];\n//       this.shuffledArr[i] = temp;\n//     }\n//     return this.shuffledArr;\n//   }\n\n//   getSeconds() {\n//     this.seconds += 1;\n//     return this.seconds;\n//   }\n\n//   saveTimeCounter() {\n//     if (this.minutes === 0 && this.hours === 0) {\n//       return (this.seconds > 9 ? `${this.seconds} sec` : `0${this.seconds} sec`);\n//     }\n//     if (this.hours === 0) {\n//       return (`0${this.minutes} min, 0${this.seconds} sec`);\n//     }\n\n//     return (`0${this.hours} hours, 0${this.minutes} min, 0${this.seconds} sec`);\n//   }\n\n//   stopTimeCounter() {\n//     this.hours = 0;\n//     this.minutes = 0;\n//     this.seconds = 0;\n//   }\n// }\n\n// gameLvls.forEach((btn) => {\n//   btn.addEventListener('click', () => {\n//     newGameLvl = btn.innerHTML[0] * 1;\n\n//     console.log(newGameLvl);\n\n//   });\n// });\n\n// console.log(newGameLvl);\n\n// const newGame = new Game(newGameLvl);\n// console.log(newGame);\n\n// function startTimeCounter() {\n//   timerActive = setInterval(() => {\n//     newGame.getSeconds();\n//     if (newGame.seconds < 10) {\n//       seconds.innerHTML = `0${newGame.seconds}`;\n//     }\n//     if (newGame.seconds > 10) {\n//       seconds.innerHTML = `${newGame.seconds}`;\n//     }\n//     if (newGame.seconds > 59) {\n//       newGame.seconds = 0;\n//       newGame.minutes += 1;\n//       seconds.innerHTML = `0${newGame.seconds}`;\n//       minutes.innerHTML = `0${newGame.minutes}`;\n//     }\n//     if (newGame.minutes >= 10) {\n//       minutes.innerHTML = `${newGame.minutes}`;\n//     }\n//     if (newGame.minutes >= 59) {\n//       newGame.hours += 1;\n//       newGame.minutes = 0;\n//       hours.innerHTML = `0${newGame.hours}`;\n//     }\n//     if (newGame.hours > 9) {\n//       hours.innerHTML = `${newGame.hours}`;\n//     }\n//     if (newGame.hours > 23) {\n//       newGame.hours = 0;\n//     }\n//   }, 1000);\n// }\n\n// const openMenu = () => {\n//   settings.classList.toggle('opened');\n//   burger.classList.toggle('active');\n// };\n\n// wrapper.addEventListener('click', openMenu);\n// burger.addEventListener('click', openMenu);\n\n// startBtn.addEventListener('click', () => {\n//   console.log(newGame);\n//   startTimeCounter();\n// });\n\n// stopBtn.addEventListener('click', () => {\n//   clearInterval(timerActive);\n//   newGame.stopTimeCounter();\n//   hours.innerHTML = '00';\n//   minutes.innerHTML = '00';\n//   seconds.innerHTML = '00';\n// });\n\n//# sourceURL=webpack://gem-puzzle/./src/index.js?");

/***/ }),

/***/ "./src/scripts/render.js":
/*!*******************************!*\
  !*** ./src/scripts/render.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ render)\n/* harmony export */ });\nvar body = document.querySelector('body');\nfunction render() {\n  body.innerHTML = \"<header class=\\\"header\\\">\\n    <div class=\\\"header__wrapper wrapper\\\">\\n      <h1 class=\\\"title\\\">Gem Puzzle</h1>\\n      <div class=\\\"burger__container\\\">\\n        <span class=\\\"burger\\\"></span>\\n      </div>\\n    </div>\\n    <nav class=\\\"settings\\\">\\n      <div class=\\\"settings__wrapper wrapper\\\">\\n        <ul class=\\\"settings__list\\\">\\n          <li class=\\\"settings__list__item sound\\\"><span class=\\\"settings__text \\\">Sounds on/off</span><span class=\\\"sound-icon\\\"></span></li>\\n          <li class=\\\"settings__list__item\\\">\\n            <span class=\\\"settings__text\\\">Select level</span>\\n            <div class=\\\"game-lvls\\\">\\n              <span class=\\\"game-lvl game-lvl_3\\\">3 x 3</span>\\n              <span class=\\\"game-lvl game-lvl_4 chosen\\\">4 x 4</span>\\n              <span class=\\\"game-lvl game-lvl_5\\\">5 x 5</span>\\n              <span class=\\\"game-lvl game-lvl_6\\\">6 x 6</span>\\n              <span class=\\\"game-lvl game-lvl_7\\\">7 x 7</span>\\n              <span class=\\\"game-lvl game-lvl_8\\\">8 x 8</span>\\n            </div>\\n          </li>\\n          <li class=\\\"settings__list__item best\\\"> <div class=\\\"best-results-btn btn\\\">Show best results</div></li>\\n        </ul>\\n      </div>\\n    </nav>\\n  </header>\\n\\n  <main>\\n    <div class=\\\"wrapper\\\">\\n      <div class=\\\"start-btns__block\\\">\\n        <div class=\\\"save__block\\\">\\n          <div class=\\\"save-btn btn_small\\\">Save</div>\\n          <div class=\\\"play-save-btn btn_small\\\">Play saved</div>\\n        </div>\\n        <div class=\\\"start-btn btn\\\">Shiffle and start</div>\\n\\n      </div>\\n\\n      <div class=\\\"game-field__wrapper\\\">\\n        <div class=\\\"game-field\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"stats-counter\\\">\\n        <div class=\\\"steps-counter\\\">\\n          Steps:&nbsp;<span class=\\\"steps-counter__num\\\">0</span>\\n        </div>\\n        <div class=\\\"time-counter\\\">\\n          Time:&nbsp;<span class=\\\"time-counter__num\\\"\\n            ><span class=\\\"hours\\\">00</span>:<span class=\\\"minutes\\\">00</span\\n            >:<span class=\\\"seconds\\\">00</span>\\n          </span>\\n        </div>\\n      </div>\\n      <div class=\\\"btn-controls__block\\\">\\n        <div class=\\\"pause-btn btn\\\">Pause</div>\\n        <div class=\\\"stop-btn btn\\\">Stop</div>\\n      </div>\\n      <div class=\\\"best-score__block\\\">\\n      </div>\\n\\n      <div class=\\\"popup\\\">\\n        <h3 class=\\\"popup__title\\\">Congrats, winner!</h3>\\n        <div class=\\\"popup__score\\\">\\n          Your score is&nbsp;<span class=\\\"popup__score__num\\\">0</span>&nbsp;steps\\n        </div>\\n        <div class=\\\"popup__time\\\">\\n          </span>\\n        </div>\\n        <div class=\\\"best-score__block\\\">\\n        </div>\\n        <div class=\\\"bonus__block\\\"></div>\\n        <div class=\\\"popup__burger__block\\\">\\n          <span class=\\\"burger popup__burger\\\"></span>\\n        </div>\\n      </div>\\n      <div class=\\\"best-results__popup\\\">\\n        <h3 class=\\\"best-results__popup__title\\\">Best results</h3>\\n        <ul class=\\\"best-results\\\">\\n          <li class=\\\"best-results__item\\\">\\n            <div class=\\\"best-results__size\\\">Size\\n            </div>\\n            <div class=\\\"best-results__steps\\\"> Steps\\n            </div>\\n          </li>\\n          <li class=\\\"best-results__item\\\">\\n            <div class=\\\"best-results__size\\\">3 x 3\\n            </div>\\n            <div class=\\\"best-results__steps\\\" data-size=\\\"3\\\">\\n            </div>\\n          </li>\\n          <li class=\\\"best-results__item\\\">\\n            <div class=\\\"best-results__size\\\">4 x 4\\n            </div>\\n            <div class=\\\"best-results__steps\\\" data-size=\\\"4\\\">\\n            </div>\\n          </li>\\n          <li class=\\\"best-results__item\\\">\\n            <div class=\\\"best-results__size\\\" >5 x 5\\n            </div>\\n            <div class=\\\"best-results__steps\\\" data-size=\\\"5\\\">\\n            </div>\\n          </li>\\n          <li class=\\\"best-results__item\\\">\\n            <div class=\\\"best-results__size\\\">6 x 6\\n            </div>\\n            <div class=\\\"best-results__steps\\\" data-size=\\\"6\\\">\\n            </div>\\n          </li>\\n          <li class=\\\"best-results__item\\\">\\n            <div class=\\\"best-results__size\\\">7 x 7\\n            </div>\\n            <div class=\\\"best-results__steps\\\" data-size=\\\"7\\\">\\n            </div>\\n          </li>\\n          <li class=\\\"best-results__item\\\">\\n            <div class=\\\"best-results__size\\\">8 x 8\\n            </div>\\n            <div class=\\\"best-results__steps\\\" data-size=\\\"8\\\">\\n            </div>\\n          </li>\\n        </ul>\\n        <div class=\\\"best-popup__burger__block\\\">\\n          <span class=\\\"burger popup__burger best-results__popup__burger\\\"></span>\\n        </div>\\n      </div>\\n    </div>\\n  </main>\\n  <footer>\\n    <audio class=\\\"audio move\\\">\\n      <source src='./audio/move_3RgJF9KJ.mp3'>\\n     </audio>\\n     <audio class=\\\"audio start\\\">\\n      <source src='./audio/start.mp3'>\\n     </audio>\\n    <a href=\\\"https://github.com/EmilyRight\\\" target=\\\"blank\\\" class=\\\"author\\\"\\n      >By EmilyRight</a\\n    >\\n  </footer>\";\n}\n\n//# sourceURL=webpack://gem-puzzle/./src/scripts/render.js?");

/***/ }),

/***/ "./src/index.html":
/*!************************!*\
  !*** ./src/index.html ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Module\nvar code = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n  <head>\\n    <meta charset=\\\"UTF-8\\\" />\\n    <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\" />\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" />\\n    <link rel=\\\"preconnect\\\" href=\\\"https://fonts.googleapis.com\\\" />\\n    <link rel=\\\"preconnect\\\" href=\\\"https://fonts.gstatic.com\\\" crossorigin />\\n    <link\\n      href=\\\"https://fonts.googleapis.com/css2?family=Forum&family=Roboto&family=Silkscreen&display=swap\\\"\\n      rel=\\\"stylesheet\\\"\\n    />\\n    <title>Gem Puzzle</title>\\n  </head>\\n  <body>\\n  </body>\\n</html>\\n\";\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (code);\n\n//# sourceURL=webpack://gem-puzzle/./src/index.html?");

/***/ }),

/***/ "./src/styles/style.scss":
/*!*******************************!*\
  !*** ./src/styles/style.scss ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://gem-puzzle/./src/styles/style.scss?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;